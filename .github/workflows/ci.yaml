name: CI

on:
    - push
    - workflow_dispatch

permissions:
    contents: write

jobs:
    prettier:
        name: Prettier check
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - uses: pnpm/action-setup@v4
              with:
                  version: latest
            - name: Install node
              uses: actions/setup-node@v4
              with:
                  node-version: '20.10.0'
                  cache: 'pnpm'
            - name: Install frontend dependencies, check Prettier formatting
              run: |
                  pnpm i
                  pnpm lint:prettier

    cpp_format:
        name: C++ Formatting Check
        runs-on: ubuntu-latest
        strategy:
          matrix:
            path:
              - 'esp'
              - 'simulator'
        steps:
        - uses: actions/checkout@v5
        - name: Run clang-format style check for C/C++/Protobuf programs.
          uses: jidicula/clang-format-action@v4.15.0
          with:
            clang-format-version: '17'
            check-path: ${{ matrix.path }}

    frontend_eslint:
        name: ESLint Frontend
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - uses: pnpm/action-setup@v4
              with:
                  version: latest
            - name: Install node
              uses: actions/setup-node@v4
              with:
                  node-version: '20.10.0'
                  cache: 'pnpm'
            - name: Install frontend dependencies, run ESLint
              run: |
                  pnpm i
                  pnpm lint:frontend:eslint

    frontend_typescript:
        name: Typescript Frontend
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - uses: pnpm/action-setup@v4
              with:
                  version: latest
            - name: Install node
              uses: actions/setup-node@v4
              with:
                  node-version: '20.10.0'
                  cache: 'pnpm'
            - name: Install frontend dependencies, check typing
              run: |
                  pnpm i
                  pnpm lint:frontend:ts

    frontend_tests:
        name: Frontend Tests
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - uses: pnpm/action-setup@v4
              with:
                  version: latest
            - name: Install node
              uses: actions/setup-node@v4
              with:
                  node-version: '20.10.0'
                  cache: 'pnpm'
            - name: Install frontend dependencies, run tests
              run: |
                  pnpm i
                  pnpm test

    actionlint:
        name: Actionlint
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - name: actionlint
              uses: raven-actions/actionlint@v2

    build_esp:
        name: Build and archive ESP firmware
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v5
            - name: Build ESP binaries
              uses: ./.github/actions/build-esp
            - name: Archive build output artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: merged-firmware
                  path: build/merged-firmware.bin
                  compression-level: 0

    build_simulator:
        name: Build and archive simulator binary
        timeout-minutes: 10
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5
            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/pip
                      ~/.platformio/.cache
                  key: ${{ runner.os }}-pio
            - uses: actions/setup-python@v6
              with:
                  python-version: '3.12'
            - name: Install SDL2
              run: |
                  sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main universe restricted multiverse"
                  sudo apt-get update -y -qq
                  sudo apt-get install libsdl2-dev
            - name: Install PlatformIO Core
              run: pip install --upgrade platformio
            - name: Build PlatformIO Project
              run: |
                  cd simulator
                  pio run --verbose --environment emulator
            - name: Archive build output artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: simulator
                  path: simulator/.pio/build/emulator/program
                  compression-level: 0
